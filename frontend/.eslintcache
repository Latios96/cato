[{"M:\\workspace\\cato\\frontend\\src\\pages\\ProjectPage.tsx":"1","M:\\workspace\\cato\\frontend\\src\\components\\app\\App.tsx":"2","M:\\workspace\\cato\\frontend\\src\\components\\projectrunview\\ProjectRunsView.tsx":"3","M:\\workspace\\cato\\frontend\\src\\components\\header\\Header.tsx":"4","M:\\workspace\\cato\\frontend\\src\\index.tsx":"5","M:\\workspace\\cato\\frontend\\src\\components\\project\\ProjectComponent.tsx":"6","M:\\workspace\\cato\\frontend\\src\\components\\projectsview\\ProjectsView.tsx":"7","M:\\workspace\\cato\\frontend\\src\\components\\suiteresultcomponent\\SuiteResultComponent.tsx":"8","M:\\workspace\\cato\\frontend\\src\\pages\\ProjectsPage.tsx":"9","M:\\workspace\\cato\\frontend\\src\\components\\suiteresultcomponent\\WaitingOrRunningTestResultComponent.tsx":"10","M:\\workspace\\cato\\frontend\\src\\components\\suiteresultcomponent\\FinishedTestResultComponent.tsx":"11","M:\\workspace\\cato\\frontend\\src\\utils.ts":"12"},{"size":438,"mtime":1606736340588,"results":"13","hashOfConfig":"14"},{"size":1405,"mtime":1606737149100,"results":"15","hashOfConfig":"14"},{"size":3350,"mtime":1606766817447,"results":"16","hashOfConfig":"14"},{"size":397,"mtime":1606737149123,"results":"17","hashOfConfig":"14"},{"size":562,"mtime":1606673955922,"results":"18","hashOfConfig":"14"},{"size":388,"mtime":1606675540125,"results":"19","hashOfConfig":"14"},{"size":1208,"mtime":1606676000631,"results":"20","hashOfConfig":"14"},{"size":2026,"mtime":1606765980003,"results":"21","hashOfConfig":"14"},{"size":313,"mtime":1606676000671,"results":"22","hashOfConfig":"14"},{"size":688,"mtime":1606769189751,"results":"23","hashOfConfig":"14"},{"size":1006,"mtime":1606765842706,"results":"24","hashOfConfig":"14"},{"size":134,"mtime":1606765270679,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8j9aoe",{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"M:\\workspace\\cato\\frontend\\src\\pages\\ProjectPage.tsx",[],"M:\\workspace\\cato\\frontend\\src\\components\\app\\App.tsx",["55"],"import React from \"react\";\nimport \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  RouteComponentProps,\n} from \"react-router-dom\";\nimport ProjectsPage from \"../../pages/ProjectsPage\";\nimport ProjectPage from \"../../pages/ProjectPage\";\n\ninterface ProjectPageMatchParams {\n  projectId: string;\n  runId: string;\n}\n\ninterface ProjectPageMatchProps\n  extends RouteComponentProps<ProjectPageMatchParams> {}\ninterface ProjectRunPageMatchProps\n  extends RouteComponentProps<ProjectPageMatchParams> {}\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={() => <ProjectsPage />} />\n        <Route\n          exact\n          path=\"/projects/:projectId\"\n          component={(props: ProjectPageMatchProps) => {\n            return (\n              <ProjectPage\n                projectId={parseInt(props.match.params.projectId)}\n                currentRunId={null}\n              />\n            );\n          }}\n        />\n        <Route\n          exact\n          path=\"/projects/:projectId/runs/:runId\"\n          component={(props: ProjectPageMatchProps) => {\n            return (\n              <ProjectPage\n                projectId={parseInt(props.match.params.projectId)}\n                currentRunId={parseInt(props.match.params.runId)}\n              />\n            );\n          }}\n        />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n",["56","57"],"M:\\workspace\\cato\\frontend\\src\\components\\projectrunview\\ProjectRunsView.tsx",[],"M:\\workspace\\cato\\frontend\\src\\components\\header\\Header.tsx",[],["58","59"],"M:\\workspace\\cato\\frontend\\src\\index.tsx",[],"M:\\workspace\\cato\\frontend\\src\\components\\project\\ProjectComponent.tsx",[],"M:\\workspace\\cato\\frontend\\src\\components\\projectsview\\ProjectsView.tsx",[],["60","61"],"M:\\workspace\\cato\\frontend\\src\\components\\suiteresultcomponent\\SuiteResultComponent.tsx",["62","63"],"import React, { Component } from \"react\";\nimport { Button, Card, Spinner } from \"react-bootstrap\";\nimport SuiteResult from \"../../models/SuiteResult\";\nimport TestResult from \"../../models/TestResult\";\nimport WaitingOrRunningTestResultComponent from \"./WaitingOrRunningTestResultComponent\";\nimport FinishedTestResultComponent from \"./FinishedTestResultComponent\";\ninterface Props {\n  suiteResult: SuiteResult;\n}\ninterface State {\n  testResults: TestResult[];\n}\nclass SuiteResultComponent extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { testResults: [] };\n  }\n  componentDidMount() {\n    this.fetchTestResults();\n  }\n  componentDidUpdate(\n    prevProps: Readonly<Props>,\n    prevState: Readonly<State>,\n    snapshot?: any\n  ) {\n    if (this.props.suiteResult.id !== prevProps.suiteResult.id) {\n      this.fetchTestResults();\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>{this.props.suiteResult.suite_name}</h2>\n        {this.state.testResults.map((result: TestResult) => {\n          return (\n            <div>\n              <Card>\n                <Card.Body>\n                  <Card.Title>\n                    {result.test_identifier.suite_name} /{\" \"}\n                    {result.test_identifier.test_name}\n                  </Card.Title>\n                  {result.execution_status === \"FINISHED\" ? (\n                    <FinishedTestResultComponent result={result} />\n                  ) : (\n                    <WaitingOrRunningTestResultComponent result={result} />\n                  )}\n                </Card.Body>\n              </Card>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n  fetchTestResults = () => {\n    fetch(\"/api/v1/test_results/suite_result/\" + this.props.suiteResult.id)\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          this.setState({ testResults: result });\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  };\n}\n\nexport default SuiteResultComponent;\n","M:\\workspace\\cato\\frontend\\src\\pages\\ProjectsPage.tsx",[],"M:\\workspace\\cato\\frontend\\src\\components\\suiteresultcomponent\\WaitingOrRunningTestResultComponent.tsx",[],"M:\\workspace\\cato\\frontend\\src\\components\\suiteresultcomponent\\FinishedTestResultComponent.tsx",["64"],"M:\\workspace\\cato\\frontend\\src\\utils.ts",[],{"ruleId":"65","severity":1,"message":"66","line":19,"column":11,"nodeType":"67","messageId":"68","endLine":19,"endColumn":35},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"69","replacedBy":"73"},{"ruleId":"71","replacedBy":"74"},{"ruleId":"69","replacedBy":"75"},{"ruleId":"71","replacedBy":"76"},{"ruleId":"65","severity":1,"message":"77","line":2,"column":10,"nodeType":"67","messageId":"68","endLine":2,"endColumn":16},{"ruleId":"65","severity":1,"message":"78","line":2,"column":24,"nodeType":"67","messageId":"68","endLine":2,"endColumn":31},{"ruleId":"79","severity":1,"message":"80","line":34,"column":41,"nodeType":"81","endLine":34,"endColumn":96},"@typescript-eslint/no-unused-vars","'ProjectRunPageMatchProps' is defined but never used.","Identifier","unusedVar","no-native-reassign",["82"],"no-negated-in-lhs",["83"],["82"],["83"],["82"],["83"],"'Button' is defined but never used.","'Spinner' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]