[{"M:\\workspace\\cato\\frontend\\src\\pages\\ProjectPage.tsx":"1","M:\\workspace\\cato\\frontend\\src\\components\\app\\App.tsx":"2","M:\\workspace\\cato\\frontend\\src\\components\\projectrunview\\ProjectRunsView.tsx":"3","M:\\workspace\\cato\\frontend\\src\\components\\header\\Header.tsx":"4","M:\\workspace\\cato\\frontend\\src\\index.tsx":"5","M:\\workspace\\cato\\frontend\\src\\components\\project\\ProjectComponent.tsx":"6","M:\\workspace\\cato\\frontend\\src\\components\\projectsview\\ProjectsView.tsx":"7","M:\\workspace\\cato\\frontend\\src\\components\\suiteresultcomponent\\SuiteResultComponent.tsx":"8","M:\\workspace\\cato\\frontend\\src\\pages\\ProjectsPage.tsx":"9","M:\\workspace\\cato\\frontend\\src\\components\\suiteresultcomponent\\WaitingOrRunningTestResultComponent.tsx":"10","M:\\workspace\\cato\\frontend\\src\\components\\suiteresultcomponent\\FinishedTestResultComponent.tsx":"11","M:\\workspace\\cato\\frontend\\src\\utils.ts":"12"},{"size":461,"mtime":1606737149275,"results":"13","hashOfConfig":"14"},{"size":1094,"mtime":1607339176844,"results":"15","hashOfConfig":"14"},{"size":3615,"mtime":1607359103139,"results":"16","hashOfConfig":"14"},{"size":397,"mtime":1606737149123,"results":"17","hashOfConfig":"14"},{"size":562,"mtime":1606673955922,"results":"18","hashOfConfig":"14"},{"size":388,"mtime":1606675540125,"results":"19","hashOfConfig":"14"},{"size":1213,"mtime":1606815941371,"results":"20","hashOfConfig":"14"},{"size":2803,"mtime":1607357654811,"results":"21","hashOfConfig":"14"},{"size":313,"mtime":1606676000671,"results":"22","hashOfConfig":"14"},{"size":715,"mtime":1606771791364,"results":"23","hashOfConfig":"14"},{"size":1359,"mtime":1606818729133,"results":"24","hashOfConfig":"14"},{"size":366,"mtime":1606818420241,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8j9aoe",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"M:\\workspace\\cato\\frontend\\src\\pages\\ProjectPage.tsx",[],"M:\\workspace\\cato\\frontend\\src\\components\\app\\App.tsx",[],"M:\\workspace\\cato\\frontend\\src\\components\\projectrunview\\ProjectRunsView.tsx",[],"M:\\workspace\\cato\\frontend\\src\\components\\header\\Header.tsx",[],["55","56"],"M:\\workspace\\cato\\frontend\\src\\index.tsx",[],["57","58"],"M:\\workspace\\cato\\frontend\\src\\components\\project\\ProjectComponent.tsx",[],"M:\\workspace\\cato\\frontend\\src\\components\\projectsview\\ProjectsView.tsx",[],["59","60"],"M:\\workspace\\cato\\frontend\\src\\components\\suiteresultcomponent\\SuiteResultComponent.tsx",[],"M:\\workspace\\cato\\frontend\\src\\pages\\ProjectsPage.tsx",[],"M:\\workspace\\cato\\frontend\\src\\components\\suiteresultcomponent\\WaitingOrRunningTestResultComponent.tsx",[],"M:\\workspace\\cato\\frontend\\src\\components\\suiteresultcomponent\\FinishedTestResultComponent.tsx",["61"],"import React from \"react\";\nimport TestResult from \"../../models/TestResult\";\nimport { formatDuration, formatTime } from \"../../utils\";\n\ninterface Props {\n  result: TestResult;\n}\n\nfunction FinishedTestResultComponent(props: Props) {\n  return (\n    <div>\n      <p>\n        {props.result.started_at\n          ? \"started: \" + formatTime(props.result.started_at)\n          : \"\"}\n      </p>\n      <p>\n        {props.result.finished_at\n          ? \"finished: \" + formatTime(props.result.finished_at)\n          : \"\"}\n      </p>\n      <p>\n        {props.result.seconds != null\n          ? \"duration: \" + formatDuration(props.result.seconds)\n          : \"\"}\n      </p>\n      {props.result.status === \"FAILED\"\n        ? renderFailureInformation(props.result)\n        : \"\"}\n      {renderImages(props.result)}\n    </div>\n  );\n}\n\nfunction renderFailureInformation(result: TestResult): React.ReactNode {\n  return (\n    <div>\n      <p>{\"message: \" + result.message}</p>\n      <p>Command: \"{result.test_command}\"</p>\n    </div>\n  );\n}\n\nfunction renderImages(result: TestResult): React.ReactNode {\n  return (\n    <React.Fragment>\n      {result.image_output ? (\n        <img\n          src={\"/api/v1/files/\" + result.image_output}\n          alt={\"image output\"}\n        />\n      ) : (\n        \"\"\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default FinishedTestResultComponent;\n",["62","63"],"M:\\workspace\\cato\\frontend\\src\\utils.ts",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"64","replacedBy":"68"},{"ruleId":"66","replacedBy":"69"},{"ruleId":"64","replacedBy":"70"},{"ruleId":"66","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":48,"column":9,"nodeType":"74","endLine":51,"endColumn":11},{"ruleId":"64","replacedBy":"75"},{"ruleId":"66","replacedBy":"76"},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],["77"],["78"],["77"],["78"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["77"],["78"],"no-global-assign","no-unsafe-negation"]