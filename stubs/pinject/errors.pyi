from . import locations as locations
from typing import Any

class Error(Exception): ...

class AmbiguousArgNameError(Error):
    def __init__(self, injection_site_desc: Any, binding_key: Any, bindings: Any) -> None: ...

class BadDependencyScopeError(Error):
    def __init__(self, injection_site_desc: Any, from_scope_id: Any, to_scope_id: Any, binding_key: Any) -> None: ...

class ConfigureMethodMissingArgsError(Error):
    def __init__(self, configure_fn: Any, possible_args: Any) -> None: ...

class ConflictingExplicitBindingsError(Error):
    def __init__(self, colliding_bindings: Any) -> None: ...

class ConflictingRequiredBindingError(Error):
    def __init__(self, required_binding: Any, colliding_bindings: Any) -> None: ...

class CyclicInjectionError(Error):
    def __init__(self, binding_stack: Any) -> None: ...

class DecoratorAppliedToNonInitError(Error):
    def __init__(self, decorator_name: Any, fn: Any) -> None: ...

class DirectlyPassingInjectedArgsError(Error):
    def __init__(self, duplicated_args: Any, injection_site_desc: Any, provider_fn: Any) -> None: ...

class DuplicateDecoratorError(Error):
    def __init__(self, decorator_name: Any, second_decorator_loc: Any) -> None: ...

class EmptyBindingSpecError(Error):
    def __init__(self, binding_spec: Any) -> None: ...

class EmptyProvidesDecoratorError(Error):
    def __init__(self, at_provides_loc: Any) -> None: ...

class EmptySequenceArgError(Error):
    def __init__(self, call_site_loc: Any, arg_name: Any) -> None: ...

class InjectingNoneDisallowedError(Error):
    def __init__(self, proviser_desc: Any) -> None: ...

class InvalidBindingTargetError(Error):
    def __init__(self, binding_loc: Any, binding_key: Any, binding_target: Any, expected_type_str: Any) -> None: ...

class MissingRequiredBindingError(Error):
    def __init__(self, required_binding: Any) -> None: ...

class MultipleAnnotationsForSameArgError(Error):
    def __init__(self, arg_binding_key: Any, decorator_loc: Any) -> None: ...

class MultipleBindingTargetArgsError(Error):
    def __init__(self, binding_loc: Any, binding_key: Any, arg_names: Any) -> None: ...

class NoBindingTargetArgsError(Error):
    def __init__(self, binding_loc: Any, binding_key: Any) -> None: ...

class NoRemainingArgsToInjectError(Error):
    def __init__(self, decorator_loc: Any) -> None: ...

class NoSuchArgError(Error):
    def __init__(self, call_site_loc: Any, arg_name: Any) -> None: ...

class NoSuchArgToInjectError(Error):
    def __init__(self, decorator_loc: Any, arg_binding_key: Any, fn: Any) -> None: ...

class NonExplicitlyBoundClassError(Error):
    def __init__(self, provide_loc: Any, cls: Any) -> None: ...

class NothingInjectableForArgError(Error):
    def __init__(self, binding_key: Any, injection_site_desc: Any) -> None: ...

class OnlyInstantiableViaProviderFunctionError(Error):
    def __init__(self, injection_site_fn: Any, arg_binding_key: Any, binding_target_desc: Any) -> None: ...

class OverridingDefaultScopeError(Error):
    def __init__(self, scope_id: Any) -> None: ...

class PargsDisallowedWhenCopyingArgsError(Error):
    def __init__(self, decorator_name: Any, fn: Any, pargs_arg_name: Any) -> None: ...

class TooManyArgsToInjectDecoratorError(Error):
    def __init__(self, decorator_loc: Any) -> None: ...

class UnknownScopeError(Error):
    def __init__(self, scope_id: Any, binding_loc: Any) -> None: ...

class WrongArgElementTypeError(Error):
    def __init__(self, arg_name: Any, idx: Any, expected_type_desc: Any, actual_type_desc: Any) -> None: ...

class WrongArgTypeError(Error):
    def __init__(self, arg_name: Any, expected_type_desc: Any, actual_type_desc: Any) -> None: ...
