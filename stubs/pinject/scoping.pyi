from . import errors as errors
from typing import Any, Optional

class _SingletonScopeId: ...

SINGLETON: Any

class _PrototypeScopeId: ...

PROTOTYPE: Any
DEFAULT_SCOPE = SINGLETON

class Scope:
    def provide(self, binding_key: Any, default_provider_fn: Any) -> None: ...

class PrototypeScope:
    def provide(self, binding_key: Any, default_provider_fn: Any): ...

class SingletonScope:
    def __init__(self) -> None: ...
    def provide(self, binding_key: Any, default_provider_fn: Any): ...

class _UnscopedScopeId: ...

UNSCOPED: Any

def get_id_to_scope_with_defaults(id_to_scope: Optional[Any] = ...): ...

class BindableScopes:
    def __init__(self, id_to_scope: Any) -> None: ...
    def get_sub_scope(self, binding: Any): ...
